<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stormfives.admin.coin.dao.RechargeGatherRuleMapper" >
  <resultMap id="BaseResultMap" type="com.stormfives.admin.coin.dao.entity.RechargeGatherRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coin_id" property="coinId" jdbcType="INTEGER" />
    <result column="coin_lower_limit" property="coinLowerLimit" jdbcType="INTEGER" />
    <result column="coin_higher_limit" property="coinHigherLimit" jdbcType="INTEGER" />
    <result column="day_cycle_round" property="dayCycleRound" jdbcType="INTEGER" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, coin_id, coin_lower_limit, coin_higher_limit, day_cycle_round, created_by, created_at, 
    updated_by, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from recharge_gather_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recharge_gather_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recharge_gather_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRuleExample" >
    delete from recharge_gather_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRule" >
    insert into recharge_gather_rule (id, coin_id, coin_lower_limit, 
      coin_higher_limit, day_cycle_round, created_by, 
      created_at, updated_by, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{coinId,jdbcType=INTEGER}, #{coinLowerLimit,jdbcType=INTEGER}, 
      #{coinHigherLimit,jdbcType=INTEGER}, #{dayCycleRound,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRule" >
    insert into recharge_gather_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coinId != null" >
        coin_id,
      </if>
      <if test="coinLowerLimit != null" >
        coin_lower_limit,
      </if>
      <if test="coinHigherLimit != null" >
        coin_higher_limit,
      </if>
      <if test="dayCycleRound != null" >
        day_cycle_round,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coinId != null" >
        #{coinId,jdbcType=INTEGER},
      </if>
      <if test="coinLowerLimit != null" >
        #{coinLowerLimit,jdbcType=INTEGER},
      </if>
      <if test="coinHigherLimit != null" >
        #{coinHigherLimit,jdbcType=INTEGER},
      </if>
      <if test="dayCycleRound != null" >
        #{dayCycleRound,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRuleExample" resultType="java.lang.Integer" >
    select count(*) from recharge_gather_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update recharge_gather_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coinId != null" >
        coin_id = #{record.coinId,jdbcType=INTEGER},
      </if>
      <if test="record.coinLowerLimit != null" >
        coin_lower_limit = #{record.coinLowerLimit,jdbcType=INTEGER},
      </if>
      <if test="record.coinHigherLimit != null" >
        coin_higher_limit = #{record.coinHigherLimit,jdbcType=INTEGER},
      </if>
      <if test="record.dayCycleRound != null" >
        day_cycle_round = #{record.dayCycleRound,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update recharge_gather_rule
    set id = #{record.id,jdbcType=INTEGER},
      coin_id = #{record.coinId,jdbcType=INTEGER},
      coin_lower_limit = #{record.coinLowerLimit,jdbcType=INTEGER},
      coin_higher_limit = #{record.coinHigherLimit,jdbcType=INTEGER},
      day_cycle_round = #{record.dayCycleRound,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRule" >
    update recharge_gather_rule
    <set >
      <if test="coinId != null" >
        coin_id = #{coinId,jdbcType=INTEGER},
      </if>
      <if test="coinLowerLimit != null" >
        coin_lower_limit = #{coinLowerLimit,jdbcType=INTEGER},
      </if>
      <if test="coinHigherLimit != null" >
        coin_higher_limit = #{coinHigherLimit,jdbcType=INTEGER},
      </if>
      <if test="dayCycleRound != null" >
        day_cycle_round = #{dayCycleRound,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stormfives.admin.coin.dao.entity.RechargeGatherRule" >
    update recharge_gather_rule
    set coin_id = #{coinId,jdbcType=INTEGER},
      coin_lower_limit = #{coinLowerLimit,jdbcType=INTEGER},
      coin_higher_limit = #{coinHigherLimit,jdbcType=INTEGER},
      day_cycle_round = #{dayCycleRound,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>